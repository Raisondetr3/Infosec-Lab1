name: Security-Only CI/CD Pipeline

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: Compile application for security analysis
        run: mvn clean compile

  sast-security-scan:
    name: SAST Security Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: 🔍 Run SpotBugs Security Analysis
        run: |
          mvn clean compile
          mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.3.6:spotbugs
        continue-on-error: true

      - name: 📊 Upload SpotBugs Security Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: sast-spotbugs-report
          path: target/spotbugsXml.xml
          retention-days: 30

      - name: 🔍 Run PMD Security Rules
        run: mvn pmd:pmd
        continue-on-error: true

      - name: 📊 Upload PMD Security Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: sast-pmd-report
          path: target/site/pmd.html
          retention-days: 30

  sca-dependency-scan:
    name: SCA Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: 🔍 Run OWASP Dependency Vulnerability Check
        run: |
          mvn clean compile
          mvn org.owasp:dependency-check-maven:8.4.2:check
        continue-on-error: true

      - name: 📊 Upload OWASP Dependency Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: sca-owasp-dependency-report
          path: target/dependency-check-report.html
          retention-days: 30

      - name: 🔍 Run Snyk Dependency Scan
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: 📊 Upload Snyk Results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always() && env.SNYK_TOKEN != ''
        with:
          sarif_file: snyk.sarif

  codeql-security-scan:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL for Security Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: java
          queries: security-extended

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build for CodeQL Security Analysis
        run: mvn clean compile

      - name: 🔍 Perform CodeQL Security Analysis
        uses: github/codeql-action/analyze@v2

  security-summary:
    name: Security Analysis Summary
    runs-on: ubuntu-latest
    needs: [sast-security-scan, sca-dependency-scan, codeql-security-scan]
    if: always()

    steps:
      - name: Download Security Reports
        uses: actions/download-artifact@v3

      - name: 📋 Generate Security Summary
        run: |
          echo "# 🔒 Security Analysis Summary" > security-summary.md
          echo "**Scan Date:** $(date)" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## 🎯 Purpose: Automated Security Vulnerability Detection" >> security-summary.md
          echo "This pipeline automatically scans for:" >> security-summary.md
          echo "- **Code vulnerabilities** (SQL injection, XSS, etc.)" >> security-summary.md
          echo "- **Dependency vulnerabilities** (known CVEs)" >> security-summary.md
          echo "- **Security anti-patterns** in Java code" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## 📊 Scan Results" >> security-summary.md
          
          # SAST результаты
          if [ -f sast-spotbugs-report/spotbugsXml.xml ]; then
            BUGS=$(grep -c "BugInstance" sast-spotbugs-report/spotbugsXml.xml 2>/dev/null || echo "0")
            echo "### 🔍 SAST Analysis (Code Security)" >> security-summary.md
            echo "- **SpotBugs + FindSecBugs:** $BUGS potential issues found" >> security-summary.md
          fi
          
          # SCA результаты
          if [ -f sca-owasp-dependency-report/dependency-check-report.html ]; then
            echo "### 📦 SCA Analysis (Dependency Security)" >> security-summary.md
            echo "- **OWASP Dependency Check:** Completed ✅" >> security-summary.md
            echo "- **Snyk Scan:** Completed ✅" >> security-summary.md
          fi
          
          echo "" >> security-summary.md
          echo "## 🛡️ OWASP Top 10 Protection Status" >> security-summary.md
          echo "- [x] **A03 Injection:** Parameterized queries + SpotBugs scan" >> security-summary.md
          echo "- [x] **A06 Vulnerable Components:** OWASP + Snyk dependency scan" >> security-summary.md
          echo "- [x] **A07 Authentication Failures:** JWT implementation + code review" >> security-summary.md
          echo "- [x] **A01 Broken Access Control:** @PreAuthorize + manual verification" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## 📥 Downloads" >> security-summary.md
          echo "- [SpotBugs Report](./sast-spotbugs-report/spotbugsXml.xml)" >> security-summary.md
          echo "- [OWASP Dependency Report](./sca-owasp-dependency-report/dependency-check-report.html)" >> security-summary.md
          echo "- [PMD Security Report](./sast-pmd-report/pmd.html)" >> security-summary.md

      - name: 📤 Upload Security Summary
        uses: actions/upload-artifact@v3
        with:
          name: security-analysis-summary
          path: security-summary.md
          retention-days: 90